{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.14","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[],"dockerImageVersionId":30786,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"markdown","source":"","metadata":{}},{"cell_type":"markdown","source":"## **Chapter 2: Word count and bag of words**","metadata":{}},{"cell_type":"markdown","source":"Libraries that are used in this chapter are:\n- NLTK\n- collections\n\nBag of words is commonly employed to find the most frequently-occuring word in a text. It is thus also used to find the topic of a specific text.","metadata":{}},{"cell_type":"markdown","source":"## Building a Counter with bag-of-words","metadata":{}},{"cell_type":"code","source":"from collections import Counter\nfrom nltk.tokenize import word_tokenize\n\narticle = \"\"\"Roles and Responsibilities\n\n    Execute with minimal guidance rotor life projects (LCF Low Cycle Fatigue, FM Fracture Mechanics, etc.) using sound engineering principles and adhering to business standards, practices, procedures, and product / program requirements\n    Initiate and execute of 775 process life analysis reviews and internal project reviews\n    Provide technical leadership to personnel/cross functional teams supporting the assigned project\n    Recommend approach to meet the technical and program requirements\n    Formulate and implement plans to achieve technical requirements, prepare schedules and contract commitments, coordinate and supervise teams providing sub-analyses\n    Provide analysis support for repair/MRB/DR/QEM etc. life analyses as needed\n    Provide timely communications on significant issues or developments\n    Participate as a presenter or reviewer in technical and program reviews\n    Assure proper documentation of technical data generated for the assigned projects and/or tasks consistent with engineering policies and procedures\n\nRequired Qualifications\n\n    BSc/MSc in Engineering\n    Significant experience relevant to indicated position area of expertise\n    Very good understanding of technical aspects of mechanical design & analysis\n    Project management skills\n\nDesired Characteristics\n\n    Strong technical aptitude, including applicable engineering tools and systems\n    English - solid oral and written communication skills\n    Strong interpersonal and leadership skills\n    PC proficiency\n    Team player\n\"\"\"\n\n\n# Import Counter\nfrom collections import Counter\n\n# Tokenize the article: tokens\ntokens = word_tokenize(article)\n\n# Convert the tokens into lowercase: lower_tokens\nlower_tokens = [token.lower() for token in tokens]\n\n# Create a Counter with the lowercase tokens: bow_simple\nbow_simple = Counter(lower_tokens)\n\n# Print the 10 most common tokens\nprint(bow_simple.most_common(20))\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-03T01:59:31.798308Z","iopub.execute_input":"2024-11-03T01:59:31.800327Z","iopub.status.idle":"2024-11-03T01:59:31.815123Z","shell.execute_reply.started":"2024-11-03T01:59:31.800275Z","shell.execute_reply":"2024-11-03T01:59:31.813844Z"}},"outputs":[{"name":"stdout","text":"[('and', 14), (',', 8), ('technical', 7), ('to', 5), ('of', 5), ('engineering', 4), ('life', 3), ('program', 3), ('requirements', 3), ('analysis', 3), ('reviews', 3), ('project', 3), ('provide', 3), ('the', 3), ('skills', 3), ('execute', 2), ('with', 2), ('projects', 2), ('etc', 2), ('.', 2)]\n","output_type":"stream"}],"execution_count":4},{"cell_type":"markdown","source":"### **Simple text preprocessing**","metadata":{}},{"cell_type":"markdown","source":"\n> Primarily, bag of words is used to find tokens in a text. To develop a quality bag of words, we will need to have a solid strategy for pre-processing in place. This might include:- Tokenization, where a text is broken into words- Lowercasing, where uppercase words are converted to lowercase- Lemmatization, shortening of words into their base/root words- Removing punctuation, or stop words, punctuation, or unwanted tokens\n","metadata":{}},{"cell_type":"code","source":"## Here:\n# - we shall retrieve only alphabetical words \n# - we shall also forget about the stop words\n\nfrom nltk.corpus import stopwords\n\nlower_tokens = [token.lower() for token in tokens]\nalpha = [w for w in lower_tokens if w.isalpha()]           # Returns the token only if it is alphabetical\n\n\n# Create a Counter with the lowercase tokens: bow_simple\nbow_simple = Counter(alpha)\n\n# Print the 10 most common tokens\nprint(bow_simple.most_common(20))","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-03T02:06:37.507554Z","iopub.execute_input":"2024-11-03T02:06:37.508007Z","iopub.status.idle":"2024-11-03T02:06:37.516145Z","shell.execute_reply.started":"2024-11-03T02:06:37.507965Z","shell.execute_reply":"2024-11-03T02:06:37.514685Z"}},"outputs":[{"name":"stdout","text":"[('and', 14), ('technical', 7), ('to', 5), ('of', 5), ('engineering', 4), ('life', 3), ('program', 3), ('requirements', 3), ('analysis', 3), ('reviews', 3), ('project', 3), ('provide', 3), ('the', 3), ('skills', 3), ('execute', 2), ('with', 2), ('projects', 2), ('etc', 2), ('procedures', 2), ('leadership', 2)]\n","output_type":"stream"}],"execution_count":5},{"cell_type":"markdown","source":"","metadata":{}}]}